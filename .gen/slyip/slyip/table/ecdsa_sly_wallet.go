//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var EcdsaSlyWallet = newEcdsaSlyWalletTable("slyip", "ecdsa_sly_wallet", "")

type ecdsaSlyWalletTable struct {
	postgres.Table

	//Columns
	EcdsaAddress          postgres.ColumnString
	OnChainAccountAddress postgres.ColumnString
	OnChainPermissions    postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type EcdsaSlyWalletTable struct {
	ecdsaSlyWalletTable

	EXCLUDED ecdsaSlyWalletTable
}

// AS creates new EcdsaSlyWalletTable with assigned alias
func (a EcdsaSlyWalletTable) AS(alias string) *EcdsaSlyWalletTable {
	return newEcdsaSlyWalletTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EcdsaSlyWalletTable with assigned schema name
func (a EcdsaSlyWalletTable) FromSchema(schemaName string) *EcdsaSlyWalletTable {
	return newEcdsaSlyWalletTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EcdsaSlyWalletTable with assigned table prefix
func (a EcdsaSlyWalletTable) WithPrefix(prefix string) *EcdsaSlyWalletTable {
	return newEcdsaSlyWalletTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EcdsaSlyWalletTable with assigned table suffix
func (a EcdsaSlyWalletTable) WithSuffix(suffix string) *EcdsaSlyWalletTable {
	return newEcdsaSlyWalletTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEcdsaSlyWalletTable(schemaName, tableName, alias string) *EcdsaSlyWalletTable {
	return &EcdsaSlyWalletTable{
		ecdsaSlyWalletTable: newEcdsaSlyWalletTableImpl(schemaName, tableName, alias),
		EXCLUDED:            newEcdsaSlyWalletTableImpl("", "excluded", ""),
	}
}

func newEcdsaSlyWalletTableImpl(schemaName, tableName, alias string) ecdsaSlyWalletTable {
	var (
		EcdsaAddressColumn          = postgres.StringColumn("ecdsa_address")
		OnChainAccountAddressColumn = postgres.StringColumn("on_chain_account_address")
		OnChainPermissionsColumn    = postgres.IntegerColumn("on_chain_permissions")
		allColumns                  = postgres.ColumnList{EcdsaAddressColumn, OnChainAccountAddressColumn, OnChainPermissionsColumn}
		mutableColumns              = postgres.ColumnList{OnChainPermissionsColumn}
	)

	return ecdsaSlyWalletTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		EcdsaAddress:          EcdsaAddressColumn,
		OnChainAccountAddress: OnChainAccountAddressColumn,
		OnChainPermissions:    OnChainPermissionsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
