//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SlyWallet = newSlyWalletTable("slyip", "sly_wallet", "")

type slyWalletTable struct {
	postgres.Table

	//Columns
	Address           postgres.ColumnString
	Chainid           postgres.ColumnString
	AccountID         postgres.ColumnString
	TransactionHash   postgres.ColumnString
	TransactionStatus postgres.ColumnString
	InvitationCode    postgres.ColumnString
	CreatedAt         postgres.ColumnTimestampz
	UpdatedAt         postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SlyWalletTable struct {
	slyWalletTable

	EXCLUDED slyWalletTable
}

// AS creates new SlyWalletTable with assigned alias
func (a SlyWalletTable) AS(alias string) *SlyWalletTable {
	return newSlyWalletTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SlyWalletTable with assigned schema name
func (a SlyWalletTable) FromSchema(schemaName string) *SlyWalletTable {
	return newSlyWalletTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SlyWalletTable with assigned table prefix
func (a SlyWalletTable) WithPrefix(prefix string) *SlyWalletTable {
	return newSlyWalletTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SlyWalletTable with assigned table suffix
func (a SlyWalletTable) WithSuffix(suffix string) *SlyWalletTable {
	return newSlyWalletTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSlyWalletTable(schemaName, tableName, alias string) *SlyWalletTable {
	return &SlyWalletTable{
		slyWalletTable: newSlyWalletTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newSlyWalletTableImpl("", "excluded", ""),
	}
}

func newSlyWalletTableImpl(schemaName, tableName, alias string) slyWalletTable {
	var (
		AddressColumn           = postgres.StringColumn("address")
		ChainidColumn           = postgres.StringColumn("chainid")
		AccountIDColumn         = postgres.StringColumn("account_id")
		TransactionHashColumn   = postgres.StringColumn("transaction_hash")
		TransactionStatusColumn = postgres.StringColumn("transaction_status")
		InvitationCodeColumn    = postgres.StringColumn("invitation_code")
		CreatedAtColumn         = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn         = postgres.TimestampzColumn("updated_at")
		allColumns              = postgres.ColumnList{AddressColumn, ChainidColumn, AccountIDColumn, TransactionHashColumn, TransactionStatusColumn, InvitationCodeColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns          = postgres.ColumnList{ChainidColumn, AccountIDColumn, TransactionHashColumn, TransactionStatusColumn, InvitationCodeColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return slyWalletTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Address:           AddressColumn,
		Chainid:           ChainidColumn,
		AccountID:         AccountIDColumn,
		TransactionHash:   TransactionHashColumn,
		TransactionStatus: TransactionStatusColumn,
		InvitationCode:    InvitationCodeColumn,
		CreatedAt:         CreatedAtColumn,
		UpdatedAt:         UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
